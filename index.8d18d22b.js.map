{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-24f621e2c278ea37.js","src/js/modal.js","node_modules/@parcel/runtime-js/lib/runtime-704be98d7d8a4b7e.js","src/js/dinosaur-google.js","src/js/time-calculator.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.8d18d22b.js\\\",\\\"9920y\\\":\\\"trex-animation.86585dd1.gif\\\"}\"));","const titleEl = document.querySelector(\"h1\")\nconsole.log(titleEl)","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"9920y\")).toString();","import trexGif from '../images/trex-animation.gif';\nconst dino = document.getElementById('dino');\nconst cactus = document.getElementById('cactus');\nconst startBtn = document.getElementById('startBtn');\nconst clouds = document.getElementById('cloudContainer');\nconst bgMusic = new Audio('../audio/dinosaur-game-music.mp3');\nbgMusic.loop = true;\nbgMusic.volume = 0.3;\n\nclouds.style.opacity = '0';\n\nlet gameStarted = false;\nlet isAlive;\n\nfunction jump() {\n  if (!gameStarted) return;\n  if (!dino.classList.contains('jump')) {\n    dino.classList.add('jump');\n    setTimeout(() => {\n      dino.classList.remove('jump');\n    }, 400);\n  }\n}\n\nfunction startGame() {\n  if (gameStarted) return;\n  gameStarted = true;\n  startBtn.style.opacity = '0';\n\n  bgMusic.currentTime = 0;\n  bgMusic.play();\n\n  dino.style.backgroundImage = `url(${trexGif})`;\n\n  cactus.style.animation = 'block 1.7s infinite linear';\n  cactus.style.opacity = '1';\n  clouds.style.opacity = '1';\n\n  isAlive = setInterval(() => {\n    const dinoBottom = parseInt(\n      getComputedStyle(dino).getPropertyValue('bottom')\n    );\n    const cactusLeft = parseInt(\n      getComputedStyle(cactus).getPropertyValue('left')\n    );\n\n    const hitCactus = cactusLeft < 90 && cactusLeft > 40 && dinoBottom < 40;\n\n    if (hitCactus) {\n      bgMusic.pause();\n      cactus.style.opacity = '0';\n      clouds.style.opacity = '0';\n      startBtn.style.opacity = '1';\n      alert('Game Over!');\n      clearInterval(isAlive);\n      cactus.style.animation = 'none';\n      dino.style.backgroundImage = \"url('../images/trex-png.png')\";\n      gameStarted = false;\n    }\n  }, 10);\n}\n\ndocument.addEventListener('keydown', event => {\n  if (event.code === 'ArrowUp' || event.code === 'Space') {\n    event.preventDefault();\n    jump();\n  }\n});\n\ndocument.addEventListener('click', event => {\n  if (event.target !== startBtn) {\n    jump();\n  }\n});\n\nstartBtn.addEventListener('click', startGame);\n","const timeInput = document.querySelector('.time-calculator-input');\nconst timeOutput = document.getElementById('time-calculator-output');\nconst inputBtn = document.querySelector('.time-calculator-btn');\nconst unitButtons = document.querySelectorAll('button[data-unit]');\n\nlet currentUnit = 'hours';\n\nunitButtons.forEach(btn => {\n  btn.addEventListener('click', () => {\n    currentUnit = btn.dataset.unit;\n    updateOutput();\n  });\n});\n\ninputBtn.addEventListener('click', updateOutput);\n\nfunction updateOutput() {\n  let val = Number(timeInput.value);\n  if (!val || val < 0) {\n    timeOutput.textContent = '0 дн. 00:00:00';\n    return;\n  }\n\n  let totalSeconds = 0;\n\n  switch (currentUnit) {\n    case 'hours':\n      totalSeconds = val * 3600;\n      break;\n    case 'minutes':\n      totalSeconds = val * 60;\n      break;\n    case 'seconds':\n      totalSeconds = val;\n      break;\n  }\n\n  const days = Math.floor(totalSeconds / 86400);\n  totalSeconds %= 86400;\n\n  const hours = Math.floor(totalSeconds / 3600);\n  totalSeconds %= 3600;\n\n  const minutes = Math.floor(totalSeconds / 60);\n  const seconds = totalSeconds % 60;\n\n  const pad = n => n.toString().padStart(2, '0');\n\n  timeOutput.textContent = `${days} дн. ${pad(hours)}:${pad(minutes)}:${pad(\n    seconds\n  )}`;\n}\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$8a7e756c566dd1ea$var$titleEl","document","querySelector","console","log","$151aa57dbc5cd87d$exports","URL","resolve","import","meta","url","toString","$0e95750ecb51da1b$var$dino","getElementById","$0e95750ecb51da1b$var$cactus","$0e95750ecb51da1b$var$startBtn","$0e95750ecb51da1b$var$clouds","$0e95750ecb51da1b$var$bgMusic","Audio","loop","volume","style","opacity","$0e95750ecb51da1b$var$isAlive","$0e95750ecb51da1b$var$gameStarted","$0e95750ecb51da1b$var$jump","classList","contains","add","setTimeout","remove","addEventListener","event","code","preventDefault","target","currentTime","play","backgroundImage","$parcel$interopDefault","animation","setInterval","dinoBottom","parseInt","getComputedStyle","getPropertyValue","cactusLeft","pause","alert","clearInterval","$130ee66f9ff8cfa4$var$timeInput","$130ee66f9ff8cfa4$var$timeOutput","$130ee66f9ff8cfa4$var$inputBtn","$130ee66f9ff8cfa4$var$unitButtons","querySelectorAll","$130ee66f9ff8cfa4$var$currentUnit","$130ee66f9ff8cfa4$var$updateOutput","val","Number","value","textContent","totalSeconds","days","Math","floor","hours","minutes","seconds","pad","n","padStart","forEach","btn","dataset","unit"],"version":3,"file":"index.8d18d22b.js.map"}